package com.example.demo.entity;

import java.math.BigDecimal;
import java.time.LocalDate;

import jakarta.persistence.*;
import jakarta.validation.constraints.DecimalMin;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * **Transaction**
 *
 * Entity representing a financial transaction in the system.
 * This class is mapped to a database table and includes validation
 * constraints to ensure data integrity.
 */
@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
public class Transaction {

    /**
     * **transactionId**
     *
     * Unique identifier for the transaction.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long transactionId;

    /**
     * **userId**
     *
     * Identifier of the user associated with this transaction.
     * This field is required.
     */
    
    private Long userId;

    /**
     * **transactionType**
     *
     * Type of the transaction.
     * Possible values: "Withdraw", "Deposit".
     * This field is required.
     */
    @NotBlank(message = "Transaction type is required")
    private String transactionType; // Withdraw or Deposit

    /**
     * **amount**
     *
     * Amount involved in the transaction.
     * Must be greater than zero.
     * This field is required.
     */
    @NotNull(message = "Amount is required")
    @DecimalMin(value = "0.01", inclusive = true, message = "Amount must be greater than zero")
    private BigDecimal amount;

    /**
     * **transactionDate**
     *
     * Date when the transaction was made.
     * Defaults to the current date if not specified.
     */
    private LocalDate transactionDate = LocalDate.now();

    /**
     * **accountNumber**
     *
     * Account number associated with the transaction.
     * This field is optional.
     */
    private String accountNumber;
    
    /**
     * The customer name associated with the transaction.
     */
    private String customerFullName;
}
